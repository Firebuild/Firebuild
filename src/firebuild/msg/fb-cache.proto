/* Copyright (c) 2014 Balint Reczey <balint@balintreczey.hu> */
/* This file is an unpublished work. All rights reserved. */

// Protocol Buffer definitions for FireBuild
// Copyright (c) 2013 Balint Reczey.  All rights reserved.

syntax = "proto2";

package firebuild.msg;

// Message for storing and retrieving the content of a file
message FileContent {
    required bytes hash = 1; // checksum (binary) of the file content
    required bytes content = 2; // file content as raw bytes
}

// File state
message File {
    // checksum (binary) of the file content, unset if file is not found
    optional bytes hash = 1;

    // TODO add alternate hash values generated after preprocessing the file
    // with programs keeping the semantic content (e.g. removing white spaces)
    //repeated AltHash alt_hash = 2;

    // file path, absolute or relative
    optional bytes path = 3;

    // last modification time
    optional int64 mtime = 4;

    // file size, length in case of stdio
    optional int64 size = 5;

    // TODO refine mode
    optional int32 mode = 6;
}

message Dir {
    required bytes path = 1;
    repeated bytes entry = 2;
}

message EnvVar {
    required bytes name = 1;
    required bytes value = 2;
}

message Process {
    // process id
    optional int64 pid = 23;
    // Checksum (binary) of process and children
    optional bytes hash = 24;
    // program file
    required File executable = 6;

    // command parameters, starting with name of the command
    repeated bytes command = 8;

    required bytes exec_dir = 7;

    // exit status of the process
    optional int32 exit_status = 4;

    // special purpose file descriptors, not having file name
    optional File stdin = 16;
    optional File stdout = 17;
    optional File stderr = 18;

    // all files read by the process
    repeated File file_read = 1;

    // all files written by the process
    repeated File file_written = 2;

    // files not found by the process
    // if any of those files are present, the result may change
    repeated File file_not_found = 3;

    repeated File file_perm_denied = 20;

    repeated Dir dir_listed = 21;

    repeated EnvVar env_var = 19;

    // child processes referenced by checksum (binary)
    repeated bytes child_hash = 5;
    // TODO
    // signals?
    //
}
